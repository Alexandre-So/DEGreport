% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/clustering.R
\name{degPatterns}
\alias{degPatterns}
\title{Make groups of genes using expression profile}
\usage{
degPatterns(ma, metadata, minc = 15, summarize = "group", time = "time",
  col = "condition", reduce = FALSE, cutoff = 0.7, scale = TRUE,
  plot = TRUE, fixy = NULL)
}
\arguments{
\item{ma}{log2 normalized count matrix}

\item{metadata}{data frame with sample information. Rownames
should match \code{ma} column names
row number should be the same length than p-values vector.}

\item{minc}{integer minimum number of genes in a group that
will be return}

\item{summarize}{character column name in metadata that will be used to gorup
replicates.
For instance, a merge between summarize and time parameters:
control_point0 ... etc}

\item{time}{character column name in metadata that will be used as
variable that changes, normally a time variable.}

\item{col}{character column name in metadata to separate
samples. Normally control/mutant}

\item{reduce}{boolean reduce number of clusters using
correlation values between them.}

\item{cutoff}{integer threshold for correlation
expression to merge clusters (0 - 1)}

\item{scale}{boolean scale the \code{ma} values by row}

\item{plot}{boolean plot the clusters found}

\item{fixy}{vector integers used as ylim in plot}
}
\value{
list wiht two items. \code{df} is a data.frame
with two columns. The first one with genes, the second
with the clusters they belong. \code{pass_to_plot} is a vector
of the clusters that pass the \code{minc} cutoff.
}
\description{
Make groups of genes using expression profile
}
\details{
It would be used \link[cluster]{diana} function
to detect a value to cut the expression based clustering
at certain height. It can work with one or more groups with 2 or
more several time points. The different patterns can be merged
to get similar ones into only one pattern. The expression
correlation of the patterns will be used to decide whether
some need to be merged or not.
}
\examples{
data(humanSexDEedgeR)
ma <- humanSexDEedgeR$counts[1:100,]
des <- data.frame(row.names=colnames(ma), 
group=as.factor(humanSexDEedgeR$samples$group))
res <- degPatterns(ma, des, time="group", col=NULL)
}

